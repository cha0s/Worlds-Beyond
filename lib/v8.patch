diff --git a/include/v8.h b/include/v8.h
index 3e1b427..fb7cb88 100644
--- a/include/v8.h
+++ b/include/v8.h
@@ -2546,6 +2546,7 @@ class V8EXPORT Extension {  // NOLINT
   virtual ~Extension() { }
   virtual v8::Handle<v8::FunctionTemplate>
       GetNativeFunction(v8::Handle<v8::String> name) {
+    (void)(name);
     return v8::Handle<v8::FunctionTemplate>();
   }
 
@@ -3001,7 +3002,7 @@ typedef void (*JitCodeEventHandler)(const JitCodeEvent* event);
 class V8EXPORT ExternalResourceVisitor {  // NOLINT
  public:
   virtual ~ExternalResourceVisitor() {}
-  virtual void VisitExternalString(Handle<String> string) {}
+  virtual void VisitExternalString(Handle<String> string) {(void)(string);}
 };
 
 
@@ -3926,7 +3927,7 @@ class V8EXPORT OutputStream {  // NOLINT
    * will not be called in case writing was aborted.
    */
   virtual WriteResult WriteHeapStatsChunk(HeapStatsUpdate* data, int count) {
-    return kAbort;
+    (void)(data); (void)(count); return kAbort;
   };
 };
 
@@ -4124,13 +4125,13 @@ class Internals {
     return *reinterpret_cast<T*>(addr);
   }
 
-  static inline bool CanCastToHeapObject(void* o) { return false; }
-  static inline bool CanCastToHeapObject(Context* o) { return true; }
-  static inline bool CanCastToHeapObject(String* o) { return true; }
-  static inline bool CanCastToHeapObject(Object* o) { return true; }
-  static inline bool CanCastToHeapObject(Message* o) { return true; }
-  static inline bool CanCastToHeapObject(StackTrace* o) { return true; }
-  static inline bool CanCastToHeapObject(StackFrame* o) { return true; }
+  static inline bool CanCastToHeapObject(void* o) { (void)(o); return false; }
+  static inline bool CanCastToHeapObject(Context* o) { (void)(o); return true; }
+  static inline bool CanCastToHeapObject(String* o) { (void)(o); return true; }
+  static inline bool CanCastToHeapObject(Object* o) { (void)(o); return true; }
+  static inline bool CanCastToHeapObject(Message* o) { (void)(o); return true; }
+  static inline bool CanCastToHeapObject(StackTrace* o) { (void)(o); return true; }
+  static inline bool CanCastToHeapObject(StackFrame* o) { (void)(o); return true; }
 };
 
 }  // namespace internal
